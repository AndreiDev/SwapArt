<%= simple_form_for(@item, validate: true, :html => { :class => 'form-inline directUpload' }) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <% if current_user.has_role? :admin %>
      <%= f.association :user, label_method: :full_name, value_method: :id %>
      <%= f.input :is_active %>
      <%= f.input :is_blocked %>
    <% end %>
    <%= f.label :image_url %>
    <%= f.file_field :image_url %>
    <br/>
    <%= f.input :description, input_html: { maxlength: 50 } %> <br/>
    <%= f.association :type, input_html: { class: 'short_box' }, label_method: :description, value_method: :id, selected: 11  %>
    <%= f.association :price, input_html: { class: 'short_box' }, label_method: :description, value_method: :id, selected: 11 %><br/>
    <%= f.input :height, input_html: { class: 'short_box', min:30 ,max: 300 } %>
    <%= f.input :width, input_html: { class: 'short_box', min:30 ,max: 300 } %><br/>
    <%= f.association :age, input_html: { class: 'short_box' }, label_method: :description, value_method: :id, selected: 11 %>
    <%= f.association :state, input_html: { class: 'short_box' }, label_method: :description, value_method: :id, selected: 11 %>
  </div>

  <div class="form-actions">
    <br/>
    <%= f.button :submit %>
  </div>
<% end %>

<script>
  $(function() {
    $('.directUpload').find("input:file").each(function(i, elem) {
      var fileInput    = $(elem);
      var form         = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar  = $("<div class='bar'></div>");
      var barContainer = $("<div class='progress'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
        fileInput:       fileInput,
        url:             '<%= @s3_direct_post.url %>',
        type:            'POST',
        autoUpload:       true,
        formData:         <%= @s3_direct_post.fields.to_json.html_safe %>,
        paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          progressBar.css('width', progress + '%')
        },
        start: function (e) {
          submitButton.prop('disabled', true);
          $("[name='item[image_url]']").hide();

          progressBar.
              css('background', 'green').
              css('display', 'block').
              css('width', '0%').
              text("Loading...");
        },
        done: function(e, data) {
          submitButton.prop('disabled', false);
          progressBar.text("Uploading done");

          // extract key and generate URL from response
          var key   = $(data.jqXHR.responseXML).find("Key").text();
          var url   = '//<%= @s3_direct_post.url.host %>/' + key;

          // create hidden field
          var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: key })
          form.append(input);

          $("[name='item[image_url]']")[0].remove();
        },
        fail: function(e, data) {
          submitButton.prop('disabled', false);
          $("[name='item[image_url]']").show();

          progressBar.
              css("background", "red").
              text("Failed");
        }
      });
    });
  });
</script>
